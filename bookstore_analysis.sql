# 1. Show all columns from the books table
SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'bia_batch4'
  AND TABLE_NAME = 'books';
  
  # 1. Show all columns from the books table
  show columns in bia_batch4.books;
  
  # 2. List all customers who live in "Chicago".
  select name from bia_batch4.customers
  where city = 'chicago';
  
# 3. Find the price of "The Alchemist".
select price from bia_batch4.books
where title = 'The Alchemist';

# 4. Count how many books are in the genre 'Horror'.
select count(*) as Horror_Count from bia_batch4.books
where genre = 'Horror';

# 5. Show the name and age of customers older than 30.
select name, age from bia_batch4.customers
where age > 30;

# 6. Retrieve all books published before the year 1990.
select * from bia_batch4.books
where published_year < 1990;

# 7. Sort the books in descending order of price
select title from bia_batch4.books
order by price desc;

# 8. What is the total number of books available?
select count(*) as total_books from bia_batch4.books;

# 9. List the names of authors who are from the UK.
select name from bia_batch4.authors
where country = 'UK';

# 10. What is the average price of all books?
select round(avg(price),2) as average_price from bia_batch4.books;

# 11. Show each order with the customer name and the book title. 
SELECT 
    o.order_id,
    c.name AS customer_name,
    b.title AS book_title,
    o.quantity,
    o.order_date
FROM 
    bia_batch4.ordersss o
JOIN 
    bia_batch4.customers c ON o.customer_id = c.customer_id
JOIN 
    bia_batch4.books b ON o.book_id = b.book_id;
    
# 11. Show each order with the customer name and the book title. 
select
o.order_id,
c.name as customer_name,
b.title as book_title,
o.quantity,
o.order_date
from
ordersss as o
join bia_batch4.customers c on c.customer_id = o.customer_id
join bia_batch4.books b on b.book_id = o.book_id;

# 12. Find the total amount spent by each customer (quantity × price).
select c.name as customer_name,
sum(o.quantity * b.price) as total_spent
from bia_batch4.ordersss o
join bia_batch4.customers c on c.customer_id = o.customer_id
join bia_batch4.books b on b.book_id = o.book_id
group by c.customer_id, c.name;

# 13. List all orders placed in March 2023. 
select * from bia_batch4.ordersss
where order_date between '2023-03-01' and '2023-03-31';

# 14. Which customer has placed the highest number of orders?
select c.name as customer_name, count(o.order_id) as total_orders from bia_batch4.ordersss o
join bia_batch4.customers c on c.customer_id = o.customer_id
group by c.customer_id, c.name
order by total_orders desc
limit 1;

# 15. Find books that were never ordered.
select b.title
from bia_batch4.books b
left join bia_batch4.ordersss o on b.book_id = o.book_id
where o.book_id is null;

# 16. List all authors along with the number of books they’ve written.
select a.name, count(b.author_id) as total_books from bia_batch4.authors a
join bia_batch4.books b on a.author_id = b.author_id
group by a.author_id
order by total_books;

# 17. Show the total revenue generated per book.
select b.title, sum(b.price * o.quantity) as total_revenue from bia_batch4.ordersss o
join bia_batch4.books b on b.book_id = o.book_id
group by b.book_id, b.title
order by total_revenue desc;

# 18. Which genre has the most books? 
select b.genre, count(b.genre) as book_count from bia_batch4.books b
group by b.genre
order by book_count desc;

# 19. Find customers who ordered more than 1 book in a single order.
select c.name, count(o.customer_id) total_purchases from bia_batch4.customers c
join bia_batch4.ordersss o on c.customer_id = o.customer_id
group by o.customer_id
order by total_purchases desc
limit 1;

# 20. What is the most expensive book in the store?
select b.title, b.price price from bia_batch4.books b
order by price desc
limit 1;

# 21. List all customers and the total number of distinct genres they have purchased.
select c.name customer_name, count(distinct b.genre) distinct_genres_purchased from bia_batch4.customers c
join bia_batch4.ordersss o on c.customer_id = o.customer_id
join bia_batch4.books b on b.book_id = o.book_id
group by c.customer_id
order by distinct_genres_purchased desc;

# 22. Show the name of each author and the total revenue generated by their books.
select a.name, sum(b.price * o.quantity) as total_revenue from bia_batch4.authors a
join bia_batch4.books b on a.author_id = b.author_id
join bia_batch4.ordersss o on b.book_id = o.book_id
group by b.author_id
order by total_revenue desc;

# 23. Find customers who have bought books from more than one author.
select c.name, count(distinct b.author_id) books_bought from bia_batch4.customers c
join bia_batch4.ordersss o on c.customer_id = o.customer_id
join bia_batch4.books b on o.book_id = b.book_id
group by c.customer_id
having books_bought > 1;

# 24. List all books with their author name, price, and total quantity sold.
select b.title, a.name, b.price, sum(o.quantity) total_quantity_sold from bia_batch4.books b
join bia_batch4.ordersss o on b.book_id = o.book_id
join bia_batch4.authors a on b.author_id = a.author_id
group by b.book_id, b.title, a.name, b.price
order by total_quantity_sold desc;

# 25. Show each customer along with the number of books they've ordered and the total amount spent. 
select c.name, sum(o.quantity) total_bought, sum(b.price * o.quantity) total_spent from bia_batch4.customers c
join bia_batch4.ordersss o on c.customer_id = o.customer_id
join bia_batch4.books b on b.book_id = o.book_id
group by o.customer_id, c.name
order by total_spent desc;

# 26. Which customer bought the oldest published book? 
SELECT c.name, b.title, b.published_year
FROM bia_batch4.ordersss o
JOIN bia_batch4.books b ON b.book_id = o.book_id
JOIN bia_batch4.customers c ON c.customer_id = o.customer_id
WHERE b.published_year = (
  SELECT MIN(published_year)
  FROM bia_batch4.books
  WHERE book_id IN (
    SELECT book_id FROM bia_batch4.ordersss
  )
);

# 27. Show authors who have never had a book ordered. 
select a.name from bia_batch4.authors a 
join bia_batch4.books b on a.author_id = b.author_id
where b.book_id not in (
select book_id from bia_batch4.ordersss
);

# 28. List the top 3 best-selling books by quantity. 
select b.title, sum(o.quantity) total_quantity from bia_batch4.books b
join bia_batch4.ordersss o on b.book_id = o.book_id
group by b.book_id, b.title
order by total_quantity desc
limit 3;

# 29. What is the average age of customers who ordered horror books? 
select round(avg(c.age),0) as average_age, b.genre from bia_batch4.customers c
join bia_batch4.ordersss o on c.customer_id = o.customer_id
join bia_batch4.books b on b.book_id = o.book_id
where genre = 'Horror';

# 30. Find books whose price is higher than the average price of all books.
select b.title, b.price price from bia_batch4.books b
where b.price > (select avg(books.price) from bia_batch4.books)
order by price desc;